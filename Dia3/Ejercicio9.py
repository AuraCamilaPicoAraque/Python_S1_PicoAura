## Ejercicio -9 [Aura Pico] cc: 1097498480 üë®‚Äçü¶Ø

#Write a function to validate an email address format.
#Extend it to validate phone numbers based on a given country format.
#Modify it to check if a given password meets security requirements.



import re

# Funci√≥n para validar una direcci√≥n de correo electr√≥nico
def validar_email(email):
    # Expresi√≥n regular para validar el correo electr√≥nico
    patron_email = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    if re.match(patron_email, email):
        return True
    else:
        return False

# Funci√≥n para validar un n√∫mero de tel√©fono seg√∫n un formato espec√≠fico
def validar_telefono(telefono, pais='MX'):
    if pais == 'MX':
        # Formato de tel√©fono mexicano (XXX-XXX-XXXX)
        patron_telefono = r'^\d{3}-\d{3}-\d{4}$'
        if re.match(patron_telefono, telefono):
            return True
    # Puedes agregar m√°s pa√≠ses y formatos aqu√≠
    return False

# Funci√≥n para validar la seguridad de una contrase√±a
def validar_contrase√±a(contrase√±a):
    # La contrase√±a debe tener al menos 8 caracteres, una letra may√∫scula, una min√∫scula, un n√∫mero y un car√°cter especial
    patron_contrase√±a = r'^(?=.*[A-Za-z])(?=.*\d)(?=.*[!@#$%^&*()_+={}\[\]:;"\'<>,.?/\\|`~]).{8,}$'
    if re.match(patron_contrase√±a, contrase√±a):
        return True
    else:
        return False

# Ejemplo de uso de las funciones:
email = "test@ejemplo.com"
telefono = "123-456-7890"
contrase√±a = "Contrase√±a123!"

print("Email v√°lido:", validar_email(email))  # True o False
print("Tel√©fono v√°lido:", validar_telefono(telefono))  # True o False
print("Contrase√±a v√°lida:", validar_contrase√±a(contrase√±a))  # True o False


## Ejercicio -9 [Aura Pico] cc: 1097498480 üë®‚Äçü¶Ø